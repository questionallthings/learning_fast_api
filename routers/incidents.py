from fastapi import APIRouter
from database import Database
from fastapi import Depends
from sqlalchemy.orm import Session
from typing import Optional
from datetime import datetime
import crud
import schema

router = APIRouter(
    prefix="/api/v1/incidents",
    tags=["Incidents"]
)
db_initial = Database()
db_initial.create_engine()


# @router.post("") # For creating new data
# @router.get("") # For reading data
# @router.put("") # For updating data
# @router.delete("") # For deleting data


@router.get("/")
def get_incidents(db: Session = Depends(db_initial.get_db),
                  limit: int = 5,
                  incident_id: Optional[int] = None,
                  event_time: Optional[datetime] = None,
                  alert_category: Optional[str] = None,
                  alert_name: Optional[datetime] = None,
                  alert_source: Optional[str] = None,
                  alert_info: Optional[str] = None,
                  attachment_name: Optional[str] = None,
                  attachment_file_type: Optional[str] = None,
                  attachment_md5: Optional[str] = None,
                  attachment_sha256: Optional[str] = None,
                  attachment_size: Optional[int] = None,
                  tenant_id: Optional[int] = None,
                  detection_time: Optional[datetime] = None,
                  category: Optional[str] = None,
                  subcategory: Optional[str] = None,
                  cve: Optional[str] = None,
                  cvss: Optional[str] = None,
                  dst_hostname: Optional[str] = None,
                  dst_domain: Optional[str] = None,
                  dst_path: Optional[str] = None,
                  dst_parameters: Optional[str] = None,
                  dst_ipv4: Optional[str] = None,
                  dst_ipv6: Optional[str] = None,
                  reported_time: Optional[datetime] = None,
                  dst_port: Optional[int] = None,
                  dst_protocol: Optional[str] = None,
                  dst_mac: Optional[str] = None,
                  src_hostname: Optional[str] = None,
                  src_domain: Optional[str] = None,
                  src_path: Optional[str] = None,
                  src_parameters: Optional[str] = None,
                  src_ipv4: Optional[str] = None,
                  src_ipv6: Optional[str] = None,
                  src_port: Optional[int] = None,
                  arrival_time: Optional[datetime] = None,
                  src_protocol: Optional[str] = None,
                  src_mac: Optional[str] = None,
                  notes: Optional[str] = None,
                  email_address: Optional[str] = None,
                  email_to: Optional[str] = None,
                  email_cc: Optional[str] = None,
                  email_bcc: Optional[str] = None,
                  email_body_text: Optional[str] = None,
                  email_body_html: Optional[str] = None,
                  email_in_reply_to: Optional[str] = None,
                  initial_investigation_time: Optional[datetime] = None,
                  email_message_id: Optional[str] = None,
                  email_headers: Optional[str] = None,
                  email_received: Optional[str] = None,
                  email_reply_to: Optional[str] = None,
                  email_return_path: Optional[str] = None,
                  email_original_ip: Optional[str] = None,
                  email_size: Optional[int] = None,
                  email_subject: Optional[str] = None,
                  email_url: Optional[str] = None,
                  email_reporter_address: Optional[str] = None,
                  actioned_time: Optional[datetime] = None,
                  email_reporter: Optional[str] = None,
                  event_number: Optional[int] = None,
                  event_group: Optional[str] = None,
                  event_type: Optional[str] = None,
                  event_status: Optional[str] = None,
                  file_name: Optional[str] = None,
                  file_type: Optional[str] = None,
                  file_md5: Optional[str] = None,
                  file_sha256: Optional[str] = None,
                  file_size: Optional[int] = None,
                  username: Optional[str] = None,
                  file_path: Optional[str] = None,
                  parent_process_uid: Optional[str] = None,
                  parent_process_name: Optional[str] = None,
                  parent_process_command_line: Optional[str] = None,
                  process_uid: Optional[str] = None,
                  process_name: Optional[str] = None,
                  process_command_line: Optional[str] = None,
                  pcap_file_name: Optional[str] = None,
                  pcap_file_size: Optional[int] = None,
                  pcap_file_location: Optional[str] = None,
                  account_name: Optional[str] = None,
                  mitre_attack_tactic: Optional[str] = None,
                  mitre_attack_technique: Optional[str] = None,
                  mitre_attack_subtechnique: Optional[str] = None,
                  react_stage: Optional[str] = None,
                  react_action: Optional[str] = None,
                  account_group: Optional[str] = None,
                  ):
    kwargs = locals()
    del kwargs['db']
    del kwargs['limit']
    incidents = crud.get_incidents(db, limit=limit, **kwargs)
    return incidents


@router.get("/{incident_id}")
def get_incident(incident_id: int, db: Session = Depends(db_initial.get_db)):
    incident = crud.get_incident(db, incident_id=incident_id)
    return incident


@router.post("/")
def create_incident(db: Session = Depends(db_initial.get_db),
                    event_time: Optional[datetime] = None,
                    alert_category: Optional[str] = None,
                    alert_name: Optional[datetime] = None,
                    alert_source: Optional[str] = None,
                    alert_info: Optional[str] = None,
                    attachment_name: Optional[str] = None,
                    attachment_file_type: Optional[str] = None,
                    attachment_md5: Optional[str] = None,
                    attachment_sha256: Optional[str] = None,
                    attachment_size: Optional[int] = None,
                    tenant_id: Optional[int] = None,
                    detection_time: Optional[datetime] = None,
                    category: Optional[str] = None,
                    subcategory: Optional[str] = None,
                    cve: Optional[str] = None,
                    cvss: Optional[str] = None,
                    dst_hostname: Optional[str] = None,
                    dst_domain: Optional[str] = None,
                    dst_path: Optional[str] = None,
                    dst_parameters: Optional[str] = None,
                    dst_ipv4: Optional[str] = None,
                    dst_ipv6: Optional[str] = None,
                    reported_time: Optional[datetime] = None,
                    dst_port: Optional[int] = None,
                    dst_protocol: Optional[str] = None,
                    dst_mac: Optional[str] = None,
                    src_hostname: Optional[str] = None,
                    src_domain: Optional[str] = None,
                    src_path: Optional[str] = None,
                    src_parameters: Optional[str] = None,
                    src_ipv4: Optional[str] = None,
                    src_ipv6: Optional[str] = None,
                    src_port: Optional[int] = None,
                    arrival_time: Optional[datetime] = None,
                    src_protocol: Optional[str] = None,
                    src_mac: Optional[str] = None,
                    notes: Optional[str] = None,
                    email_address: Optional[str] = None,
                    email_to: Optional[str] = None,
                    email_cc: Optional[str] = None,
                    email_bcc: Optional[str] = None,
                    email_body_text: Optional[str] = None,
                    email_body_html: Optional[str] = None,
                    email_in_reply_to: Optional[str] = None,
                    initial_investigation_time: Optional[datetime] = None,
                    email_message_id: Optional[str] = None,
                    email_headers: Optional[str] = None,
                    email_received: Optional[str] = None,
                    email_reply_to: Optional[str] = None,
                    email_return_path: Optional[str] = None,
                    email_original_ip: Optional[str] = None,
                    email_size: Optional[int] = None,
                    email_subject: Optional[str] = None,
                    email_url: Optional[str] = None,
                    email_reporter_address: Optional[str] = None,
                    actioned_time: Optional[datetime] = None,
                    email_reporter: Optional[str] = None,
                    event_number: Optional[int] = None,
                    event_group: Optional[str] = None,
                    event_type: Optional[str] = None,
                    event_status: Optional[str] = None,
                    file_name: Optional[str] = None,
                    file_type: Optional[str] = None,
                    file_md5: Optional[str] = None,
                    file_sha256: Optional[str] = None,
                    file_size: Optional[int] = None,
                    username: Optional[str] = None,
                    file_path: Optional[str] = None,
                    parent_process_uid: Optional[str] = None,
                    parent_process_name: Optional[str] = None,
                    parent_process_command_line: Optional[str] = None,
                    process_uid: Optional[str] = None,
                    process_name: Optional[str] = None,
                    process_command_line: Optional[str] = None,
                    pcap_file_name: Optional[str] = None,
                    pcap_file_size: Optional[int] = None,
                    pcap_file_location: Optional[str] = None,
                    account_name: Optional[str] = None,
                    mitre_attack_tactic: Optional[str] = None,
                    mitre_attack_technique: Optional[str] = None,
                    mitre_attack_subtechnique: Optional[str] = None,
                    react_stage: Optional[str] = None,
                    react_action: Optional[str] = None,
                    account_group: Optional[str] = None,
                    ):
    kwargs = locals()
    del kwargs['db']
    incident = crud.create_incident(db, **kwargs)
    return incident


@router.patch("/{incident_id}")
def update_incident(incident_id: int,
                    db: Session = Depends(db_initial.get_db),
                    event_time: Optional[datetime] = None,
                    alert_category: Optional[str] = None,
                    alert_name: Optional[datetime] = None,
                    alert_source: Optional[str] = None,
                    alert_info: Optional[str] = None,
                    attachment_name: Optional[str] = None,
                    attachment_file_type: Optional[str] = None,
                    attachment_md5: Optional[str] = None,
                    attachment_sha256: Optional[str] = None,
                    attachment_size: Optional[int] = None,
                    tenant_id: Optional[int] = None,
                    detection_time: Optional[datetime] = None,
                    category: Optional[str] = None,
                    subcategory: Optional[str] = None,
                    cve: Optional[str] = None,
                    cvss: Optional[str] = None,
                    dst_hostname: Optional[str] = None,
                    dst_domain: Optional[str] = None,
                    dst_path: Optional[str] = None,
                    dst_parameters: Optional[str] = None,
                    dst_ipv4: Optional[str] = None,
                    dst_ipv6: Optional[str] = None,
                    reported_time: Optional[datetime] = None,
                    dst_port: Optional[int] = None,
                    dst_protocol: Optional[str] = None,
                    dst_mac: Optional[str] = None,
                    src_hostname: Optional[str] = None,
                    src_domain: Optional[str] = None,
                    src_path: Optional[str] = None,
                    src_parameters: Optional[str] = None,
                    src_ipv4: Optional[str] = None,
                    src_ipv6: Optional[str] = None,
                    src_port: Optional[int] = None,
                    arrival_time: Optional[datetime] = None,
                    src_protocol: Optional[str] = None,
                    src_mac: Optional[str] = None,
                    notes: Optional[str] = None,
                    email_address: Optional[str] = None,
                    email_to: Optional[str] = None,
                    email_cc: Optional[str] = None,
                    email_bcc: Optional[str] = None,
                    email_body_text: Optional[str] = None,
                    email_body_html: Optional[str] = None,
                    email_in_reply_to: Optional[str] = None,
                    initial_investigation_time: Optional[datetime] = None,
                    email_message_id: Optional[str] = None,
                    email_headers: Optional[str] = None,
                    email_received: Optional[str] = None,
                    email_reply_to: Optional[str] = None,
                    email_return_path: Optional[str] = None,
                    email_original_ip: Optional[str] = None,
                    email_size: Optional[int] = None,
                    email_subject: Optional[str] = None,
                    email_url: Optional[str] = None,
                    email_reporter_address: Optional[str] = None,
                    actioned_time: Optional[datetime] = None,
                    email_reporter: Optional[str] = None,
                    event_number: Optional[int] = None,
                    event_group: Optional[str] = None,
                    event_type: Optional[str] = None,
                    event_status: Optional[str] = None,
                    file_name: Optional[str] = None,
                    file_type: Optional[str] = None,
                    file_md5: Optional[str] = None,
                    file_sha256: Optional[str] = None,
                    file_size: Optional[int] = None,
                    username: Optional[str] = None,
                    file_path: Optional[str] = None,
                    parent_process_uid: Optional[str] = None,
                    parent_process_name: Optional[str] = None,
                    parent_process_command_line: Optional[str] = None,
                    process_uid: Optional[str] = None,
                    process_name: Optional[str] = None,
                    process_command_line: Optional[str] = None,
                    pcap_file_name: Optional[str] = None,
                    pcap_file_size: Optional[int] = None,
                    pcap_file_location: Optional[str] = None,
                    account_name: Optional[str] = None,
                    mitre_attack_tactic: Optional[str] = None,
                    mitre_attack_technique: Optional[str] = None,
                    mitre_attack_subtechnique: Optional[str] = None,
                    react_stage: Optional[str] = None,
                    react_action: Optional[str] = None,
                    account_group: Optional[str] = None,
                    ):
    kwargs = locals()
    del kwargs['db']
    del kwargs['incident_id']
    incident = crud.update_incident(db, incident_id, **kwargs)
    return incident


@router.delete("/{incident_id}")
def delete_incident(incident_id: int, db: Session = Depends(db_initial.get_db)):
    incident = crud.delete_incident(db, incident_id=incident_id)
    return incident
